apiVersion : v1
kind : Pod
metadata:
  name: frontend
  labels:
    app: frontend
spec:
  serviceAccountName: frontend
  containers:
    - name: frontend
      image: tejaswinidockerhub/frontend
      imagePullPolicy: Always
---
apiVersion : v1
kind : Pod
metadata:
  name: catalogue
  labels:
    app: catalogue
spec:
  serviceAccountName: catalogue
  initContainers:
    - name: parameters-pull
      image: docker.io/tejaswinidockerhub/init-awscontainer-parameters-image
      imagePullPolicy: Always
      volumeMounts:
        - mountPath: /parameters
          name: parameters
      env:
        - name: PARAMS
          value: "dev.roboshop.catalogue.MONGO_URL,MONGO_URL"
  containers:
    - name: catalogue
      image: tejaswinidockerhub/catalogue
      imagePullPolicy: Always
      volumeMounts:
        - mountPath: /parameters
          name: parameters
  volumes:
    - name: parameters
      emptyDir: { }
---
apiVersion: batch/v1
kind: Job
metadata:
  name: catalogue-schema-load
spec:
  backoffLimit: 4
  template:
    spec:
      serviceAccountName: catalogue
      restartPolicy: Never
      volumes:
        - name: parameters
          emptyDir: { }
      initContainers:
        - name: parameters-pull
          image: docker.io/tejaswinidockerhub/init-awscontainer-parameters-image
          imagePullPolicy: Always
          volumeMounts:
            - mountPath: /parameters
              name: parameters
          env:
            - name: PARAMS
              value: "dev.roboshop.docdb.username,DOCDB_USER dev.roboshop.docdb.pass,DOCDB_PASS,dev.roboshop.docdb.endpoint,DOCDB_ENDPOINT"
      containers:
        - name: schema-load
          image: docker.io/tejaswinidockerhub/schema-loader
          imagePullPolicy: Always
          env:
            - name: COMPONENT
              value: catalogue
            - name: SCHEMA_TYPE
              value: mongo
          volumeMounts:
            - mountPath: /parameters
              name: parameters
---
apiVersion : v1
kind : Pod
metadata:
  name: user
  labels:
    app: user
spec:
  serviceAccountName: user
  initContainers:
    - name: parameters-pull
      image: docker.io/tejaswinidockerhub/init-awscontainer-parameters-image
      imagePullPolicy: Always
      volumeMounts:
        - mountPath: /parameters
          name: parameters
      env:
        - name: PARAMS
          value: "dev.roboshop.user.MONGO_URL,MONGO_URL dev.roboshop.user.REDIS_HOST,REDIS_HOST"
  containers:
    - name: user
      image: tejaswinidockerhub/user
      imagePullPolicy: Always
      volumeMounts:
        - mountPath: /parameters
          name: parameters
  volumes:
    - name: parameters
      emptyDir: { }
---
apiVersion : v1
kind : Pod
metadata:
  name: cart
  labels:
    app: cart
spec:
  serviceAccountName: cart
  initContainers:
    - name: parameters-pull
      image: docker.io/tejaswinidockerhub/init-awscontainer-parameters-image
      imagePullPolicy: Always
      volumeMounts:
        - mountPath: /parameters
          name: parameters
      env:
        - name: PARAMS
          value: "dev.roboshop.cart.REDIS_HOST,REDIS_HOST dev.roboshop.cart.CATALOGUE_HOST,CATALOGUE_HOST,dev.roboshop.cart.CATALOGUE_PORT,CATALOGUE_PORT"
  containers:
    - name: cart
      image: tejaswinidockerhub/cart
      imagePullPolicy: Always
      volumeMounts:
        - mountPath: /parameters
          name: parameters
  volumes:
    - name: parameters
      emptyDir: { }
---
apiVersion : v1
kind : Pod
metadata:
  name: payment
  labels:
    app: payment
spec:
  serviceAccountName: payment
  initContainers:
    - name: parameters-pull
      image: docker.io/tejaswinidockerhub/init-awscontainer-parameters-image
      imagePullPolicy: Always
      volumeMounts:
        - mountPath: /parameters
          name: parameters
      env:
        - name: PARAMS
          value: "dev.roboshop.payment.CART_HOST,CART_HOST dev.roboshop.payment.CART_PORT,CART_PORT dev.roboshop.payment.USER_HOST,USER_HOST dev.roboshop.payment.USER_PORT,USER_PORT dev.roboshop.payment.AMQP_HOST,AMQP_HOST dev.roboshop.payment.AMQP_USER,AMQP_USER dev.roboshop.payment.AMQP_PASS,AMQP_PASS"
  containers:
    - name: payment
      image: tejaswinidockerhub/payment
      imagePullPolicy: Always
      volumeMounts:
        - mountPath: /parameters
          name: parameters
  volumes:
    - name: parameters
      emptyDir: { }
---
apiVersion : v1
kind : Pod
metadata:
  name: shipping
  labels:
    app: shipping
spec:
  serviceAccountName: shipping
  initContainers:
    - name: parameters-pull
      image: docker.io/tejaswinidockerhub/init-awscontainer-parameters-image
      imagePullPolicy: Always
      volumeMounts:
        - mountPath: /parameters
          name: parameters
      env:
        - name: PARAMS
          value: "dev.roboshop.shipping.CART_ENDPOINT,CART_ENDPOINT dev.roboshop.shipping.DB_HOST,DB_HOST"
  containers:
    - name: shipping
      image: tejaswinidockerhub/shipping
      imagePullPolicy: Always
      volumeMounts:
        - mountPath: /parameters
          name: parameters
  volumes:
    - name: parameters
      emptyDir: { }
---
apiVersion: batch/v1
kind: Job
metadata:
  name: shipping-schema-load
spec:
  backoffLimit: 4
  template:
    spec:
      serviceAccountName: shipping
      restartPolicy: Never
      volumes:
        - name: parameters
          emptyDir: { }
      initContainers:
        - name: parameters-pull
          image: docker.io/tejaswinidockerhub/init-awscontainer-parameters-image
          imagePullPolicy: Always
          volumeMounts:
            - mountPath: /parameters
              name: parameters
          env:
            - name: PARAMS
              value: "dev.roboshop.rds.endpoint,DOCDB_HOST dev.roboshop.rds.username,DB_USER,dev.roboshop.rds.password,DOCDB_PASS"
      containers:
        - name: schema-load
          image: docker.io/tejaswinidockerhub/schema-loader
          imagePullPolicy: Always
          env:
            - name: COMPONENT
              value: shipping
            - name: SCHEMA_TYPE
              value: mysql
          volumeMounts:
            - mountPath: /parameters
              name: parameters
---
#apiVersion : v1
#kind : Pod
#metadata:
#  name: dispatch
#  labels:
#    app: dispatch
#spec:
#  containers:
#    - name: dispatch
#      image: tejaswinidockerhub/dispatch

# Service: frontend
apiVersion: v1
kind: Service
metadata:
  name: frontend
spec:
  selector:
    app: frontend
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80

---
# Service: catalogue
apiVersion: v1
kind: Service
metadata:
  name: catalogue
spec:
  selector:
    app: catalogue
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080

---
# Service: user
apiVersion: v1
kind: Service
metadata:
  name: user
spec:
  selector:
    app: user
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080

---
# Service: cart
apiVersion: v1
kind: Service
metadata:
  name: cart
spec:
  selector:
    app: cart
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080

---
# Service: payment
apiVersion: v1
kind: Service
metadata:
  name: payment
spec:
  selector:
    app: payment
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080

---
# Service: shipping
apiVersion: v1
kind: Service
metadata:
  name: shipping
spec:
  selector:
    app: shipping
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080

---
# Service: dispatch
apiVersion: v1
kind: Service
metadata:
  name: dispatch
spec:
  selector:
    app: dispatch
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
---
# service accounts
apiVersion: v1
kind: ServiceAccount
metadata:
  name: frontend
  namespace: default
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::522814736516:role/dev-roboshop-eks-pod-role-for-frontend-ssm
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: catalogue
  namespace: default
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::522814736516:role/dev-roboshop-eks-pod-role-for-catalogue-ssm
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: user
  namespace: default
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::522814736516:role/dev-roboshop-eks-pod-role-for-user-ssm
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cart
  namespace: default
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::522814736516:role/dev-roboshop-eks-pod-role-for-cart-ssm
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: payment
  namespace: default
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::522814736516:role/dev-roboshop-eks-pod-role-for-payment-ssm
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: shipping
  namespace: default
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::522814736516:role/dev-roboshop-eks-pod-role-for-shipping-ssm
#apiVersion: v1
#kind: ServiceAccount
#metadata:
#  name: roboshop-dispatch-sa
#  namespace: default
#  annotations:
#    eks.amazonaws.com/role-arn: arn:aws:iam::522814736516:role/dev-roboshop-eks-pod-role-for-dispatch-ssm
#
